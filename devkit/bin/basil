#!/usr/bin/env bash

# Basil command line script.

if [[ `uname` == MINGW32* ]]; then
	BASIL_PATH=$(dirname "$0")"/../"	
else
	# Path finder from: http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
	SOURCE="${BASH_SOURCE[0]}"
	while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
		DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
		SOURCE="$(readlink "$SOURCE")"
		[[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
	done
	DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

	BASIL_PATH="$DIR/../"
fi

# clean up old logs
if [ -e $TMPDIR/basil.log ]; then
	rm $TMPDIR/basil.log
fi

EXITC=0
if [[ $BASIL_DEBUG == 1 ]]; then
	node "$BASIL_PATH/src/basil" $* 2>&1 | tee $TMPDIR/basil.log
	EXITC=${PIPESTATUS[0]}
else
	node "$BASIL_PATH/src/basil" $*
	EXITC=$?
fi

if [[(( ($BASIL_DEBUG == 1) && ($EXITC != 0) && ($EXITC != 42) && ($EXITC != 2) ))]]; then
	echo -e "basil exited with an error. The logs are in ${TMPDIR}/basil.log.\nContact our support team (support@gameclosure.com) with these logs for assistance. "
fi

while [ $EXITC == 42 ]; do
	node "$BASIL_PATH/src/basil" $*
	EXITC=$?
done
